---

- name: "{{ansible_distribution}}: install epel-release"
  yum:
    name: epel-release
  when:
    - ansible_os_family == 'RedHat'
    - ansible_distribution != 'Fedora'

- name: "{{ansible_distribution}}: install epel-release"
  dnf:
    name: epel-release
  when: ansible_distribution == 'Fedora'

- name: "{{ ansible_distribution }}: install base packages"
  yum:
    name: "{{base_packages}}"
  when:
    - ansible_os_family == 'RedHat'
    - ansible_distribution != 'Fedora'

- name: "{{ ansible_distribution }}: install base packages"
  dnf:
    name: "{{base_packages}}"
  when: ansible_distribution == 'Fedora'

- name: "{{ansible_distribution}}: install dnf-plugins-core"
  dnf:
    name: 
      - dnf-plugins-core
  when: ansible_distribution == 'Fedora'

- name: "{{ansible_distribution}}: Update all installed packages"
  yum: name=* state=latest
  when:
    - ansible_os_family == 'RedHat'
    - ansible_distribution != 'Fedora'

- name: "{{ansible_distribution}}: Update all installed packages"
  dnf: name=* state=latest
  when: ansible_distribution == 'Fedora'

- name: "{{ansible_distribution}}: Set the timezone"
  timezone:
    name: "{{timezone}}"

- name: "{{ ansible_distribution }}: bash customizations"
  block:

    - name: "{{ansible_distribution}}: change bash PS1"
      copy:
        content: |
          #!/bin/bash
          [ "$PS1" = "\\s-\\v\\\$ " ] && PS1="[\u@\H \W]\\$ "
        dest: /etc/profile.d/ps.sh

    - name: "{{ ansible_distribution }}: custom bash aliases"
      copy:
        content: |
          alias cp_backup="cp -f --backup --suffix='.copy'"
          alias grep_whitespace="grep -v '^\s*$\|^\s*\#'"
        dest: /etc/profile.d/aliases.sh

    - name: "{{ ansible_distribution }}: configure paths"
      copy:
        content: |
          PATH=$PATH:$HOME/.local/bin:$HOME/bin:$HOME/bin_public:$HOME/bin_private
          export PATH
        dest: /etc/profile.d/paths.sh

    - name: "{{ ansible_distribution }}: configure HISTTIMEFORMAT"
      copy:
        content: |
          export HISTTIMEFORMAT="%Y-%m-%d %T "
        dest: /etc/profile.d/histtimeformat.sh

  when: ansible_os_family == 'RedHat'

- name: "{{ ansible_distribution }}: vim customizations"
  copy:
    content: |
      filetype indent off
      autocmd FileType yaml setlocal et ts=2 ai sw=2
    #dest: "/home/{{ ansible_env.SUDO_USER }}/.vimrc"
    dest: "/home/{{ user }}/.vimrc"

- name: "{{ ansible_distribution }}: add user to sudoers"
  copy:
    content: |
      "{{ user }}" ALL=(ALL) NOPASSWD: ALL
    dest: /etc/sudoers.d/00-{{ user }}

- name: "{{ ansible_distribution }}: create ssh directories"
  shell: |
    mkdir /home/{{ user }}/.ssh && \
    chmod 0700 /home/{{ user }}/.ssh && \
    touch /home/{{ user }}/.ssh/authorized_keys && \
    chmod 0600 /home/{{ user }}/.ssh/authorized_keys && \
    chown -R {{ user }}:{{ user }} /home/{{ user }}/.ssh

- name: "{{ ansible_distribution }}: add public ssh key"
  copy:
    content: |
      ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCzhW87bXGJEf4AqWE6kppP/kH25GrNCyaZ5Rj7+HB5K/4XTsQKNoCwEDzEOz7Jhx8BJ4Az9VL7p9cfwqdeM/mtRF5IM/c/GRI8qpcOjQ84ziG5tyh9dNjbTRn0YlyHJJO+qGUwEimsdqM9x4Sfke/8FDUwBRJPavicqOwrHdMVAxxOBeUYP01h74+PEqfFdJVSZDDXtyg/0XA1Gx30KGC3DWzjjujfe/rT0U3IvDTPIRtj6HsdwbFdm59PDTJlHNr3BMUd1/6ZXPDNqOa2BuhhmvtSZOtRIY/lXLbTUuyZkIcKs4hJSw5iPmAN3S7U77/Wzvy5xeRhPnh6AEIKVRvHXtOe2nZTOVxlJnvFuSMsMPR5ndUyn0UPpx/idRvFPy1/1oYVpUl3gFureqGuB6eqkSSOwSwksvOzjU2r6qwEBFtjk0joiVPdN/gfiYrG+7vr/xCVMwAkJ00lGEhICtK0SDgDxuB3kKxHULSv8ewSu8sUdLTyE47AtFs0Z9gNlh0FialT+ZmLv4kT0bkYfTHbbS/FWAnHGLjL/cv8go+eSq8J5pmsLi7ppUOLQydNQBH2pIJXgDZ/xyIsxoXVHB2YUtCbejk7FEF+XVNiYIdHHbgmAVD8RSSOq2PEz5wxIX2jhCCkZFqzCGpWf2BfZImzI4JAB8y/0C+IXfpdAoSG1w== andrew@andrewmercer.net
    dest: /home/{{ user }}/.ssh/authorized_keys

- name: "{{ ansible_distribution }}: install selinux packages"
  yum:
    name: "{{ selinux_packages }}"
  when:
    #- ansible_selinux is defined and ansible_selinux != False and ansible_selinux.status == 'enabled'
    - ansible_selinux.status == "enabled"
    - ansible_os_family == 'RedHat'
    - ansible_distribution != 'Fedora'

- name: "{{ansible_distribution}}: install selinux packages"
  dnf:
    name: "{{selinux_packages}}"
  when:
    #- ansible_selinux is defined and ansible_selinux != False and ansible_selinux.status == 'enabled'
    - ansible_selinux.status == "enabled"
    - ansible_distribution == 'Fedora'

