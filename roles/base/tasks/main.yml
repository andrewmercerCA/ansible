---

- name: "{{ansible_distribution}}: install epel-release"
  yum:
    name: epel-release
  when:
    - ansible_os_family == 'RedHat'
    - ansible_distribution != 'Fedora'

- name: "{{ansible_distribution}}: install epel-release"
  dnf:
    name: epel-release
  when: ansible_distribution == 'Fedora'

- name: "{{ ansible_distribution }}: install base packages"
  yum:
    name: "{{base_packages}}"
  when:
    - ansible_os_family == 'RedHat'
    - ansible_distribution != 'Fedora'

- name: "{{ ansible_distribution }}: install base packages"
  dnf:
    name: "{{base_packages}}"
  when: ansible_distribution == 'Fedora'

- name: "{{ansible_distribution}}: install dnf-plugins-core"
  dnf:
    name: 
      - dnf-plugins-core
  when: ansible_distribution == 'Fedora'

- name: "{{ansible_distribution}}: Update all installed packages"
  yum: name=* state=latest
  when:
    - ansible_os_family == 'RedHat'
    - ansible_distribution != 'Fedora'

- name: "{{ansible_distribution}}: Update all installed packages"
  dnf: name=* state=latest
  when: ansible_distribution == 'Fedora'

- name: "{{ansible_distribution}}: Set the timezone"
  timezone:
    name: "{{timezone}}"

- name: "{{ansible_distribution}}: change bash PS1"
  copy:
    content: |
      #!/bin/bash
      [ "$PS1" = "\\s-\\v\\\$ " ] && PS1="[\u@\H \W]\\$ "
    dest: /etc/profile.d/ps.sh
  when: ansible_os_family == 'RedHat'

- name: "{{ ansible_distribution }}: bash customizations"
  copy:
    content: |
      alias grep_whitespace="grep -v '^\s*$\|^\s*\#'"
      PATH=$PATH:$HOME/.local/bin:$HOME/bin:$HOME/bin_public:$HOME/bin_private
      HISTTIMEFORMAT="%Y-%m-%d %T "
      export PATH
    dest: /etc/profile.d/amercer.sh
  when: ansible_os_family == 'RedHat'

- name: "{{ ansible_distribution }}: vim customizations"
  copy:
    content: |
      filetype indent off
      autocmd FileType yaml setlocal et ts=2 ai sw=2
    dest: "{{ ansible_userdir }}/.vimrc"

- name: "{{ansible_distribution}}: install selinux packages"
  yum:
    name: "{{selinux_packages}}"
  when:
    #- ansible_selinux is defined and ansible_selinux != False and ansible_selinux.status == 'enabled'
    - "{{ansible_selinux.status}}" == "enabled"
    - ansible_os_family == 'RedHat'
    - ansible_distribution != 'Fedora'

- name: "{{ansible_distribution}}: install selinux packages"
  dnf:
    name: "{{selinux_packages}}"
  when:
    #- ansible_selinux is defined and ansible_selinux != False and ansible_selinux.status == 'enabled'
    - "{{ansible_selinux.status}}" == "enabled"
    - ansible_distribution == 'Fedora'

