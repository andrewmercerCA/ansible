---

- name: "{{ ansible_distribution }}: Configure Linux kernel modules used by Containerd to load at boot"
  copy:
    content: |
      overlay
      br_netfilter
  dest: /etc/modules-load.d/containerd.conf

- name: "{{ ansible_distribution }}: Load overlay and br_netfilter modules immediately"
  modprobe:
    name:
      - br_netfilter
      - overlay
    state: present

- name: "{{ ansible_distribution }}: Enable required kernel parameters persistently across reboots"
  copy:
    content: |
      net.bridge.bridge-nf-call-iptables  = 1
      net.ipv4.ip_forward                 = 1
      net.bridge.bridge-nf-call-ip6tables = 1
  dest: /etc/sysctl.d/99-kubernetes-cri.conf

- name: "{{ ansible_distribution }}: Reload sysctl to load required kernel parameters immediately"
  sysctl:
    reload: yes
    sysctl_file: /etc/sysctl.d/99-kubernetes-cri.conf

- name: "{{ ansible_distribution }}: Install Containerd dependencies"
  yum:
    name:
      - yum-utils
      - device-mapper-persistent-data
      - lvm2
    state: present

- name: "{{ ansible_distribution }}: Install Docker official repository"
  command: yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
  when: ansible_os_family == 'RedHat'

- name: "{{ ansible_distribution }}: Install Containerd"
  yum:
    name: containerd.io
  when: ansible_os_family == 'RedHat'

- name: "{{ ansible_distribution }}: Create /etc/containerd directory"
  file:
    path: /etc/containerd
    state: directory

- name: "{{ ansible_distribution }}: Configure Containerd"
  shell: containerd config default > /etc/containerd/config.toml

- name: "{{ ansible_distribution }}: Enable and restart Containerd"
  service:
    enabled: true
    name: containerd.service
    state: restarted
