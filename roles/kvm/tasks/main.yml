---
- name: "{{ ansible_distribution }}: check that virtualization is enabled"
  shell: grep -E '(vmx|svm)' /proc/cpuinfo
  register: cpuinfo

- name: "{{ ansible_distribution }}: output cpuinfo"
  debug:
    msg: "{{ cpuinfo }}"

- name: "{{ ansible_distribution }}: install kvm and related packages"
  yum:
    name: "{{ kvm_packages }}"
  when:
    - ansible_os_family == 'RedHat'
    - ansible_distribution != 'Fedora'

- name: "{{ ansible_distribution }}: install kvm and related packages"
  dnf:
    name: "@virtualization"
  when: ansible_distribution == 'Fedora'

- name: "{{ ansible_distribution }}: Start and enable libvirtd"
  service:
    enabled: yes
    name: libvirtd.service
    state: started


- name: "{{ ansible_distribution }}: Kernel network parameters"
  copy:
    content: |
      bridge-nf-call-arptables = 0
      bridge-nf-call-iptables = 0
      bridge-nf-call-ip6tables = 0
      bridge-nf-filter-vlan-tagged = 0
      net.ipv4.ip_forward = 1
    dest: /etc/sysctl.d/00-kvm.conf

# Wow. These still don't work.
#- name: "{{ ansible_distribution }}: Install dependencies required for the nmcli module"
#  # https://docs.ansible.com/ansible/latest/modules/nmcli_module.html
#  #
#  # https://github.com/ansible/ansible/issues/38042
#  # fatal: [192.168.0.52]: FAILED! => {"changed": false, "msg": "This module requires NetworkManager glib API"}
#  #
#  # https://github.com/ansible/ansible/pull/58115
#  # The error was: TypeError: argument of type 'int' is not iterable
#  yum:
#    name:
#      - NetworkManager-glib
#      - libnm-qt-devel
#      - nm-connection-editor
#      - libsemanage-python
#      - policycoreutils-python
#  when: ansible_os_family == 'RedHat'
#
#
#- name: "{{ ansible_distribution }}: create bridged interface"
#  nmcli:
#    autoconnect: yes
#    conn_name: br0
#    ifname: eth0
#    type: bridge
#    state: present
#
#- name: "{{ ansible_distribution }}: attach interface to bridge"
#  nmcli:
#    conn_name: eth0
#    ifname: eth0
#    master: br0
#    type: ethernet
#    state: present

- name: "{{ ansible_distribution }}: Configure bridged interface"
  shell: |
    nmcli connection add type bridge autoconnect yes con-name br0 ifname br0
    nmcli connection modify br0 ipv4.addresses {{ STATIC_IP }}/24 ipv4.method manual
    nmcli connection modify br0 ipv4.gateway {{ GW_IP }}
    nmcli connection modify br0 ipv4.dns {{ DNS_IP }}
    nmcli connection add type bridge-slave autoconnect yes con-name eth0 ifname eth0 master br0
    nmcli connection delete Wired\ Connection\ 1
