--- # https://docs.openstack.org/neutron/queens/install/index.html
## https://docs.openstack.org/neutron/queens/install/install-rdo.html

- name: "{{ ansible_distribution }}: create neutron database"
  mysql_db:
    login_user: mysql
    login_password: "{{ mysql_password }}"
    name: neutron
    state: present

- name: "{{ ansible_distribution }}: create neutron user"
  mysql_user:
    login_user: mysql
    login_password: "{{ mysql_password }}"
    name: neutron
    password: "{{ neutron_dbpass }}"
    priv: 'neutron.*:ALL'
    state: present

openstack user create --domain default --password-prompt neutron
openstack role add --project service --user neutron admin
openstack endpoint create --region RegionOne network public http://controller0:9696
openstack endpoint create --region RegionOne network internal http://controller0:9696
openstack endpoint create --region RegionOne network admin http://controller0:9696

# Networking Option 1: Provider networks
## https://docs.openstack.org/neutron/queens/install/controller-install-option1-rdo.html
- name: "{{ ansible_distribution }}: install neutron packages"
  yum:
    name:
      - openstack-neutron
      - openstack-neutron-ml2
      - openstack-neutron-linuxbridge
      - ebtables

## /etc/neutron/neutron.conf
[database]
connection = mysql+pymysql://neutron:NEUTRON_DBPASS@controller0/neutron

[DEFAULT]
core_plugin = ml2
service_plugins =
transport_url = rabbit://openstack:RABBIT_PASS@controller0
auth_strategy = keystone
notify_nova_on_port_status_changes = true
notify_nova_on_port_data_changes = true

[keystone_authtoken]
auth_uri = http://controller0:5000
auth_url = http://controller0:35357
memcached_servers = controller0:11211
auth_type = password
project_domain_name = default
user_domain_name = default
project_name = service
username = neutron
password = NEUTRON_PASS

[nova]
auth_url = http://controller0:35357
auth_type = password
project_domain_name = default
user_domain_name = default
region_name = RegionOne
project_name = service
username = nova
password = NOVA_PASS

[oslo_concurrency]
lock_path = /var/lib/neutron/tmp

## /etc/neutron/plugins/ml2/ml2_conf.ini
[ml2]
type_drivers = flat,vlan
tenant_network_types =
mechanism_drivers = linuxbridge
extension_drivers = port_security

[ml2_type_flat]
flat_networks = provider

[securitygroup]
enable_ipset = true

## /etc/neutron/plugins/ml2/linuxbridge_agent.ini 
[linux_bridge]
physical_interface_mappings = provider:PROVIDER_INTERFACE_NAME

[vxlan]
enable_vxlan = false

[securitygroup]
enable_security_group = true
firewall_driver = neutron.agent.linux.iptables_firewall.IptablesFirewallDriver

## /etc/sysctl.conf
net.bridge.bridge-nf-call-iptables = 1
net.bridge.bridge-nf-call-ip6tables = 1

## /etc/neutron/dhcp_agent.ini
[DEFAULT]
interface_driver = linuxbridge
dhcp_driver = neutron.agent.linux.dhcp.Dnsmasq
enable_isolated_metadata = true

## /etc/neutron/metadata_agent.ini
[DEFAULT]
nova_metadata_host = controller0
metadata_proxy_shared_secret = METADATA_SECRET

## /etc/nova/nova.conf
[neutron]
# ...
url = http://controller0:9696
auth_url = http://controller0:35357
auth_type = password
project_domain_name = default
user_domain_name = default
region_name = RegionOne
project_name = service
username = neutron
password = NEUTRON_PASS
service_metadata_proxy = true
metadata_proxy_shared_secret = METADATA_SECRET

ln -s /etc/neutron/plugins/ml2/ml2_conf.ini /etc/neutron/plugin.ini

su -s /bin/sh -c "neutron-db-manage --config-file /etc/neutron/neutron.conf \
  --config-file /etc/neutron/plugins/ml2/ml2_conf.ini upgrade head" neutron

# this will be a handler
- name: "{{ ansible_distribution }}: restart the openstack-nova-api service"
  service:
    name: openstack-nova-api.service
    state: restarted

- name: "{{ ansible_distribution }}: start and enable neutron services"
  service:
    enabled: yes
    name: "{{ item }}"
    state: started
  with_items:
      - neutron-server.service
      - neutron-linuxbridge-agent.service
      - neutron-dhcp-agent.service
      - neutron-metadata-agent.service
