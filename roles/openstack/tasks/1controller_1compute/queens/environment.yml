---

## NTP
### https://docs.openstack.org/install-guide/environment-ntp.html

# test this works by running this first:
# ansible -b -i hosts openstack -m yum -a 'name=chrony state=absent'
- name: chrony"
  block:
    - name: install chrony
      yum:
        name: chrony

    - name: start and enable chrony
      service:
        enabled: yes
        name: chronyd
        state: started
  when:
    - ( 'controller' in ansible_hostname ) or ( 'compute' in ansible_hostname )
    - ansible_facts['distribution'] == 'CentOS'

## OpenStack packages
### https://docs.openstack.org/install-guide/environment-packages.html

- name: openstack repo
  block:
    - name: install openstack repo package
      yum:
        name:
          - centos-release-openstack-{{ openstack_version }}

    - name: install other openstack packages
      yum:
        name:
          - python-openstackclient
          - openstack-selinux
  when:
    - ( 'controller' in ansible_hostname ) or ( 'compute' in ansible_hostname )
    - ansible_facts['distribution'] == 'CentOS'

### MariaDB
#### https://docs.openstack.org/install-guide/environment-sql-database.html

- name: mariadb-server
  block:
    - name: install mariadb-server
      yum:
        name:
          - mariadb
          - mariadb-server
          - python2-PyMySQL
          - MySQL-python

    - name: start and enable mariadb service
      service:
        enabled: yes
        name: mariadb
        state: started

    - name: setup ~/.my.cnf
      copy:
        content: |
          [client]
          user = root
          password = "{{ the_password }}"
        dest: /root/.my.cnf
        mode: 0400

    - name: set the root password
      mysql_user:
        user: root
        password: "{{ the_password }}"
        host: localhost

    - name: remove anonymous user ansible_fqdn
      mysql_user:
        user: ""
        password: "{{ the_password }}"
        host: "{{ ansible_fqdn }}"
        state: absent

    - name: remove anonymous user
      mysql_user:
        user: ""
        password: "{{ the_password }}"
        state: absent

    - name: Secures the MySQL root user for IPV6 localhost (::1)
      mysql_user:
        user: root
        password: "{{ the_password }}"
        host: "::1"

    - name: Secures the MySQL root user for IPV4 localhost (127.0.0.1)
      mysql_user:
        user: root
        password: "{{ the_password }}"
        host: 127.0.0.1

    - name: Secures the MySQL root user for localhost domain (localhost)
      mysql_user:
        user: root
        password: "{{ the_password }}"
        host: localhost

    - name: Secures the MySQL root user for server_hostname domain
      mysql_user:
        user: root
        password: "{{ the_password }}"
        host: "{{ ansible_fqdn }}"

    - name: remove the test database
      mysql_db:
        db: test
        state: absent

    - name: create openstack.cnf
      copy:
        content: |
          [mysqld]
          bind-address = "{{ ansible_default_ipv4.address }}"

          default-storage-engine = innodb
          innodb_file_per_table = on
          max_connections = 4096
          collation-server = utf8_general_ci
          character-set-server = utf8
        dest: /etc/my.cnf.d/openstack.cnf
  when:
    - ( 'controller' in ansible_hostname )
    - ansible_facts['distribution'] == 'CentOS'

### RabbitMQ
#### https://docs.openstack.org/install-guide/environment-messaging.html
#- name: "{{ ansible_distribution }}: install rabbitmq"
#  yum:
#    name: rabbitmq-server
#
#- name: "{{ ansible_distribution }}: start and enable rabbitmq service"
#  service:
#    enabled: yes
#    name: rabbitmq-server
#    state: started
#
#- name: "{{ ansible_distribution }}: create the rabbitmq openstack user"
#  rabbitmq_user:
#    user: openstack
#    password: "{{ RABBIT_PASS }}"
#    permissions:
#      - vhost: /
#        configure_priv: .*
#        read_priv: .*
#        write_priv: .*
#    state: present
#
### Memcached
#### https://docs.openstack.org/install-guide/environment-memcached.html
#- name: "{{ ansible_distribution }}: install memcached"
#  yum:
#    name:
#      - memcached
#      - python-memcached
#
#- name: "{{ ansible_distribution }}: configure memcached"
#  lineinfile:
#    path: /etc/sysconfig/memcached
#    regexp:'^OPTIONS='
#    line: 'OPTIONS="-l 127.0.0.1,::1,controller0"'
#
#- name: "{{ ansible_distribution }}: start and enable memcached"
#  service:
#    enabled: yes
#    name: memcached
#    state: started
#
### etcd
#### https://docs.openstack.org/install-guide/environment-etcd-rdo.html
#- name: "{{ ansible_distribution }}: install etcd"
#  yum:
#    name: etcd
#
#- name: "{{ ansible_distribution }}: configure etcd"
#  lineinfile:
#    path: /etc/etcd/etcd.conf
#    regexp: "{{ item }}"
#  with_items:
#  #[Member]
#ETCD_DATA_DIR="/var/lib/etcd/default.etcd"
#ETCD_LISTEN_PEER_URLS="http://10.0.0.11:2380"
#ETCD_LISTEN_CLIENT_URLS="http://10.0.0.11:2379"
#ETCD_NAME="controller"
##[Clustering]
#ETCD_INITIAL_ADVERTISE_PEER_URLS="http://10.0.0.11:2380"
#ETCD_ADVERTISE_CLIENT_URLS="http://10.0.0.11:2379"
#ETCD_INITIAL_CLUSTER="controller=http://10.0.0.11:2380"
#ETCD_INITIAL_CLUSTER_TOKEN="etcd-cluster-01"
#ETCD_INITIAL_CLUSTER_STATE="new"
#
#- name: "{{ ansible_distribution }}: start and enable etcd"
#  service:
#    enabled: yes
#    name: etcd
#    state: started
