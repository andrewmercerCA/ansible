--- # https://docs.openstack.org/install-guide/environment.html

- name: configure hostname
  hostname:
    name: "{{ inventory_hostname }}"

- name: configure /etc/hosts
  # http://xmeblog.blogspot.com/2013/06/ansible-dynamicaly-update-etchosts.html
  # https://gist.github.com/rothgar/8793800
  lineinfile:
    dest: /etc/hosts
    regexp: '.*{{ item }}$'
    line: "{{ hostvars[item].ansible_default_ipv4.address }} {{ item }}"
    state: present
  #when: hostvars[item].ansible_default_ipv4.address is defined
  with_items: "{{ groups.all }}"

## NTP
### https://docs.openstack.org/install-guide/environment-ntp.html

# test this works by running this first:
# ansible -b -i hosts openstack -m yum -a 'name=chrony state=absent'
#
- name: chrony
  block:
    - name: install chrony
      yum:
        name: chrony

    - name: start and enable chrony
      service:
        enabled: yes
        name: chronyd
        state: started
  when:
    - ( 'controller' in ansible_hostname ) or ( 'compute' in ansible_hostname )
    - ansible_facts['distribution'] == 'CentOS'

## OpenStack packages
### https://docs.openstack.org/install-guide/environment-packages.html

- name: openstack repo
  block:
    - name: install openstack repo package
      yum:
        name:
          - centos-release-openstack-{{ openstack_version }}

    - name: install other openstack packages
      yum:
        name:
          - python-openstackclient
          - openstack-selinux
  when:
    - ( 'controller' in ansible_hostname ) or ( 'compute' in ansible_hostname )
    - ansible_facts['distribution'] == 'CentOS' and ansible_facts['distribution_major_version'] == '7'

- name: openstack repo
  block:
    - name: install openstack repo package
      yum:
        name:
          - https://rdoproject.org/repos/rdo-release.rpm
          - http://mirror.centos.org/centos/7/extras/x86_64/Packages/centos-release-openstack-queens-1-2.el7.centos.noarch.rpm

    - name: install other openstack packages
      yum:
        name:
          - python-openstackclient
          - openstack-selinux
  when:
    - ( 'controller' in ansible_hostname ) or ( 'compute' in ansible_hostname )
    - ansible_facts['distribution'] == 'CentOS' and ansible_facts['distribution_major_version'] == '8'

### MariaDB
#### https://docs.openstack.org/install-guide/environment-sql-database.html

- name: mariadb-server
  block:
    - name: install mariadb-server
      yum:
        name:
          - mariadb
          - mariadb-server
          - python2-PyMySQL
          - MySQL-python

    - name: start and enable mariadb service
      service:
        enabled: yes
        name: mariadb
        state: started

    - name: set the root password
      mysql_user:
        user: root
        password: "{{ the_password }}"
        host: localhost
        login_unix_socket: /var/lib/mysql/mysql.sock

    - name: setup ~/.my.cnf
      copy:
        content: |
          [client]
          user = root
          password = {{ the_password }}
        dest: /root/.my.cnf
        mode: 0400

    - name: "{{ansible_distribution}}: mysql_secure_installation file"
      copy:
        content: |
          DELETE FROM mysql.user WHERE User='';
          DELETE FROM mysql.user WHERE User='root' AND Host NOT IN ('localhost', '127.0.0.1', '::1');
          DROP DATABASE IF EXISTS test;
          DELETE FROM mysql.db WHERE Db='test' OR Db='test\\_%';
          FLUSH PRIVILEGES;
        dest: /tmp/mysql_secure_installation.sql

    - name: "{{ansible_distribution}}: mysql_secure_installation execute"
      shell: 'mysql < /tmp/mysql_secure_installation.sql'

#
#    - name: remove anonymous user ansible_fqdn
#      mysql_user:
#        user: ""
#        password: "{{ the_password }}"
#        host: "{{ ansible_fqdn }}"
#        state: absent
#
#    - name: remove anonymous user
#      mysql_user:
#        user: ""
#        password: "{{ the_password }}"
#        state: absent
#
#    - name: Secures the MySQL root user for IPV6 localhost (::1)
#      mysql_user:
#        user: root
#        password: "{{ the_password }}"
#        host: "::1"
#
#    - name: Secures the MySQL root user for IPV4 localhost (127.0.0.1)
#      mysql_user:
#        user: root
#        password: "{{ the_password }}"
#        host: 127.0.0.1
#
#    - name: Secures the MySQL root user for localhost domain (localhost)
#      mysql_user:
#        user: root
#        password: "{{ the_password }}"
#        host: localhost
#
#    - name: Secures the MySQL root user for server_hostname domain
#      mysql_user:
#        user: root
#        password: "{{ the_password }}"
#        host: "{{ ansible_fqdn }}"
#
#    - name: remove the test database
#      mysql_db:
#        db: test
#        state: absent
#
    - name: create openstack.cnf
      copy:
        content: |
          [mysqld]
          bind-address = "{{ ansible_default_ipv4.address }}"

          default-storage-engine = innodb
          innodb_file_per_table = on
          max_connections = 4096
          collation-server = utf8_general_ci
          character-set-server = utf8
        dest: /etc/my.cnf.d/openstack.cnf
      notify: "restart mariadb"
  when:
    - ( 'controller' in ansible_hostname )
    - ansible_facts['distribution'] == 'CentOS'

### RabbitMQ
#### https://docs.openstack.org/install-guide/environment-messaging.html

- name: install rabbitmq
  block:
    - name: install rabbitmq-server
      yum:
        name: rabbitmq-server

    - name: start and enable rabbitmq service
      service:
        enabled: yes
        name: rabbitmq-server
        state: started

    - name: create the rabbitmq openstack user
      rabbitmq_user:
        user: openstack
        password: "{{ the_password }}"
        permissions:
          - vhost: /
            configure_priv: .*
            read_priv: .*
            write_priv: .*
        state: present
  when:
    - ( 'controller' in ansible_hostname )
    - ansible_facts['distribution'] == 'CentOS'

### Memcached
#### https://docs.openstack.org/install-guide/environment-memcached.html
- name: memcached
  block:
    - name: install memcached
      yum:
        name:
          - memcached
          - python-memcached

    - name: configure memcached
      lineinfile:
        path: /etc/sysconfig/memcached
        regexp: '^OPTIONS'
        line: OPTIONS="-l 127.0.0.1,::1,controller0"
      notify: "restart memcached"

    - name: start and enable memcached
      service:
        enabled: yes
        name: memcached
        state: started
  when:
    - ( 'controller' in ansible_hostname )
    - ansible_facts['distribution'] == 'CentOS'

### etcd
#### https://docs.openstack.org/install-guide/environment-etcd-rdo.html

- name: etcd
  block:
    - name: install etcd
      yum:
        name: etcd

    - name: configure etcd
      copy:
        content: |
          #[Member]
          ETCD_DATA_DIR="/var/lib/etcd/default.etcd"
          ETCD_LISTEN_PEER_URLS="http://{{ ansible_eth0.ipv4.address }}:2380"
          ETCD_LISTEN_CLIENT_URLS="http://{{ ansible_eth0.ipv4.address }}:2379"
          ETCD_NAME="controller"
          #[Clustering]
          ETCD_INITIAL_ADVERTISE_PEER_URLS="http://{{ ansible_eth0.ipv4.address }}:2380"
          ETCD_ADVERTISE_CLIENT_URLS="http://{{ ansible_eth0.ipv4.address }}:2379"
          ETCD_INITIAL_CLUSTER="controller=http://{{ ansible_eth0.ipv4.address }}:2380"
          ETCD_INITIAL_CLUSTER_TOKEN="etcd-cluster-01"
          ETCD_INITIAL_CLUSTER_STATE="new"
        dest: /etc/etcd/etcd.conf
      notify: "restart etcd"

    - name: start and enable etcd
      service:
        enabled: yes
        name: etcd
        state: started
  when:
    - ( 'controller' in ansible_hostname )
    - ansible_facts['distribution'] == 'CentOS'
