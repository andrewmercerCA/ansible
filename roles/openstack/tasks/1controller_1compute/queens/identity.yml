--- # https://docs.openstack.org/keystone/queens/install/
# Interesting note:
# https://docs.openstack.org/keystone/queens/getting-started/architecture.html
# "Keystone is an HTTP front-end to several services. Like other OpenStack applications, this is done using python WSGI interfaces and applications are configured together using Paste."
# https://pypi.org/project/Paste
# Paste is in maintenance mode and recently moved from bitbucket to github. Patches are accepted to keep it on life support, but for the most part, please consider using other options.

- name: keystone
  block:
    - name: create keystone database
      mysql_db:
        name: keystone
        state: present
        login_unix_socket: /var/lib/mysql/mysql.sock

    - name: create keystone user
      mysql_user:
        host: "{{ item }}"
        name: keystone
        password: "{{ the_password }}"
        #password: mKZzxpRRLAbkibhLf7P6XRGrybG9xIDQyItIZHoC
        priv: "keystone.*:ALL"
        state: present
        login_unix_socket: /var/lib/mysql/mysql.sock
      with_items:
        - localhost
        - 127.0.0.1
        - ::1
        - "{{ ansible_hostname }}"

    - name: install keystone, httpd and mod_wsgi
      yum:
        name:
          - openstack-keystone
          - httpd
          - mod_wsgi

    - name: configure keystone
      copy:
        content: |
          [database]
          connection = mysql+pymysql://keystone:{{ the_password }}@controller0/keystone

          [token]
          provider = fernet
        dest: /etc/keystone/keystone.conf
      notify: "restart httpd"

    - name: populate the keystone database
      command: /bin/sh -c "keystone-manage db_sync" keystone
      register: populate_keystone

    - name: output populate keystone
      debug:
        msg: "{{ populate_keystone }}"

    - name: initialize fernet repositories
      shell: "{{ item }}"
      with_items:
        - keystone-manage fernet_setup --keystone-user keystone --keystone-group keystone
        - keystone-manage credential_setup --keystone-user keystone --keystone-group keystone
      register: fernet_repositories

    - name: output fernet repositories
      debug:
        msg: "{{ fernet_repositories }}"

    - name: bootstrap the identity service
      shell: |
        keystone-manage bootstrap --bootstrap-password "{{ the_password }}" \
        --bootstrap-admin-url http://controller0:5000/v3/ \
        --bootstrap-internal-url http://controller0:5000/v3/ \
        --bootstrap-public-url http://controller0:5000/v3/ \
        --bootstrap-region-id RegionOne
      register: bootstrap_identity

    - name: output bootstrap identity
      debug:
        msg: "{{ bootstrap_identity }}"

    - name: configure httpd
      lineinfile:
        path: /etc/httpd/conf/httpd.conf
        regexp: '^ServerName '
        line: ServerName controller0
      notify: "restart httpd"

    - name: create wsgi-keystone.conf
      file:
        dest: /etc/httpd/conf.d/wsgi-keystone.conf
        src: /usr/share/keystone/wsgi-keystone.conf
        state: link

    - name: start and enable httpd
      service:
        enabled: yes
        name: httpd
        state: started

    - name: export variables
      copy:
        content: |
          export OS_USERNAME=admin
          export OS_PASSWORD={{ the_password }}
          export OS_PROJECT_NAME=admin
          export OS_USER_DOMAIN_NAME=Default
          export OS_PROJECT_DOMAIN_NAME=Default
          export OS_AUTH_URL="http://controller0:5000/v3"
          export OS_IDENTITY_API_VERSION="3"
        dest: /root/admin-rc

    # Running into this error:
    # fatal: [controller0]: FAILED! => {"changed": false, "msg": "To utilize this module, the installed version ofthe openstacksdk library MUST be >=0.12.0"}
    # Tried upgrading but ran into some serious dependency issues so skipping this for now
#    - name: keystone auth
#      os_auth:
#        auth:
#          auth_url: http://controller0:5000/v3
#          username: admin
#          password: "{{ the_password }}"
#          project_name: admin
#          #os_project_domain_name: Default
#          #os_user_domain_name: Default
#      register: keystone_auth
#
#    - name: output keystone_auth
#      debug:
#        msg: "{{ keystone_auth }}"
#
#    - name: create domain
#      #shell: source /root/admin-rc && openstack domain create --description "an example domain" example
#      #register: create_domain
#      os_keystone_domain:
#        description: "an example domain"
#        name: example
#        state: present
#
#    - name: output domain create
#      debug:
#        msg: "{{ create_domain }}"
#
#    - name: create project
#      shell: openstack project create --domain default  --description "Service Project" service
#      register: create_project
#
#    - name: output project create
#      debug:
#        msg: "{{ create_project }}"
#
    # https://docs.openstack.org/keystone/queens/install/keystone-users-rdo.html
    - name: putting all the openstack cli commands into a bash script
      copy:
        content: |
          #!/bin/bash
          source /root/admin-rc
          openstack domain create --description "an example domain" example
          openstack project create --domain default --description "Service Project" service
          openstack project create --domain default --description "Demo Project" demo
          openstack user create --domain default --password-prompt demo # this requires a password
          openstack role create user
          openstack role add --project demo --user demo user
        dest: /root/identity.sh

    # https://docs.openstack.org/keystone/queens/install/keystone-verify-rdo.html
    - name: testing the operations
      copy:
        content: |
          #!/bin/bash
          
          unset OS_AUTH_URL OS_PASSWORD

          openstack --os-auth-url http://controller:35357/v3 \
          --os-project-domain-name Default --os-user-domain-name Default \
          --os-project-name admin --os-username admin token issue

          openstack --os-auth-url http://controller:5000/v3 \
          --os-project-domain-name Default --os-user-domain-name Default \
          --os-project-name demo --os-username demo token issue

        dest: /root/identity_test.sh

    - name: create admin-openrc script
      copy:
        content: |
          export OS_PROJECT_DOMAIN_NAME=Default
          export OS_USER_DOMAIN_NAME=Default
          export OS_PROJECT_NAME=admin
          export OS_USERNAME=admin
          export OS_PASSWORD=ADMIN_PASS
          export OS_AUTH_URL=http://controller:5000/v3
          export OS_IDENTITY_API_VERSION=3
          export OS_IMAGE_API_VERSION=2
        dest: /root/admin-openrc

    - name: create demo-openrc script
      copy:
        content: |
          export OS_PROJECT_DOMAIN_NAME=Default
          export OS_USER_DOMAIN_NAME=Default
          export OS_PROJECT_NAME=demo
          export OS_USERNAME=demo
          export OS_PASSWORD=DEMO_PASS
          export OS_AUTH_URL=http://controller:5000/v3
          export OS_IDENTITY_API_VERSION=3
          export OS_IMAGE_API_VERSION=2
        dest: /root/demo-openrc

  when:
    - ( 'controller' in ansible_hostname )
    - ansible_facts['distribution'] == 'CentOS'
