--- # http://www.linuxfromscratch.org/lfs/view/stable/chapter05/gcc-pass1.html
## 5.5. GCC-8.2.0 - Pass 1

- name: "{{ansible_distribution}}: check if the gcc source directory exists"
  stat:
    path: "{{lfs}}/sources/gcc-8.2.0"
  register: gcc_dir

- name: "{{ansible_distribution}}: unpack gcc"
  unarchive:
    creates: "{{lfs}}/sources/gcc-8.2.0"
    dest: "{{lfs}}/sources"
    src: "{{lfs}}/sources/gcc-8.2.0.tar.xz"

- name: "{{ansible_distribution}}: extract mpfr, gmp and mpc"
  unarchive:
    dest: "{{lfs}}/sources/gcc-8.2.0"
    src: "{{lfs}}/sources/{{item}}"
  with_items:
    - gmp-6.1.2.tar.xz
    - mpc-1.1.0.tar.gz
    - mpfr-4.0.2.tar.xz
  when: gcc_dir.stat.exists == True

- name: "{{ansible_distribution}}: rename gmp-*, mpc-* and mpfr-* directories"
  file:
    dest: "{{lfs}}/sources/gcc-8.2.0/{{item.dest}}"
    src: "{{lfs}}/sources/gcc-8.2.0/{{item.src}}"
    state: link
  when: gcc_dir.stat.exists == True
  with_items:
    - { src: 'gmp-6.1.2', dest: 'gmp' }
    - { src: 'mpc-1.1.0', dest: 'mpc' }
    - { src: 'mpfr-4.0.2', dest: 'mpfr' }

- name: "{{ansible_distribution}}: change the location of GCC's default dynamic linker to use the one installed in /tools"
  args:
    chdir: "{{lfs}}/sources/gcc-8.2.0"
  shell: |
    for file in gcc/config/{linux,i386/linux{,64}}.h
    do
      cp -uv $file{,.orig}
      sed -e 's@/lib\(64\)\?\(32\)\?/ld@/tools&@g' \
          -e 's@/usr@/tools@g' $file.orig > $file
      echo '
    #undef STANDARD_STARTFILE_PREFIX_1
    #undef STANDARD_STARTFILE_PREFIX_2
    #define STANDARD_STARTFILE_PREFIX_1 "/tools/lib/"
    #define STANDARD_STARTFILE_PREFIX_2 ""' >> $file
      touch $file.orig
    done
  when: gcc_dir.stat.exists == True

- name: "{{ansible_distribution}}: set the default directory name for 64-bit libraries to lib"
  args:
    chdir: "{{lfs}}/sources/gcc-8.2.0"
  shell: |
    case $(uname -m) in
      x86_64)
        sed -e '/m64=/s/lib64/lib/' \
            -i.orig gcc/config/i386/t-linux64
     ;;
    esac
  when: gcc_dir.stat.exists == True

- name: "{{ansible_distribution}}: create the build directory"
  file:
    dest: "{{lfs}}/sources/gcc-8.2.0/build"
    state: directory
  when: gcc_dir.stat.exists == True

- name: "{{ansible_distribution}}: configure"
  args: 
    chdir: "{{lfs}}/sources/gcc-8.2.0/build"
  shell: |
    ../configure                                       \
        --target=$LFS_TGT                              \
        --prefix=/tools                                \
        --with-glibc-version=2.11                      \
        --with-sysroot=$LFS                            \
        --with-newlib                                  \
        --without-headers                              \
        --with-local-prefix=/tools                     \
        --with-native-system-header-dir=/tools/include \
        --disable-nls                                  \
        --disable-shared                               \
        --disable-multilib                             \
        --disable-decimal-float                        \
        --disable-threads                              \
        --disable-libatomic                            \
        --disable-libgomp                              \
        --disable-libmpx                               \
        --disable-libquadmath                          \
        --disable-libssp                               \
        --disable-libvtv                               \
        --disable-libstdcxx                            \
        --enable-languages=c,c++
  when: gcc_dir.stat.exists == True


- name: "{{ansible_distribution}}: make"
  make:
    chdir: "{{lfs}}/sources/gcc-8.2.0/build"
    params:
      NUM_THREADS: 4
  when: gcc_dir.stat.exists == True

- name: "{{ansible_distribution}}: make install"
  make:
    chdir: "{{lfs}}/sources/gcc-8.2.0/build"
    params:
      NUM_THREADS: 4
    target: install
  when: gcc_dir.stat.exists == True

- name: "{{ansible_distribution}}: cleanup"
  file:
    path: "{{lfs}}/sources/gcc-8.2.0"
    state: absent
  when: gcc_dir.stat.exists == True
