--- # https://docs.openstack.org/neutron/queens/install

- name: networking controller red hat
  # https://docs.openstack.org/neutron/queens/install/install-rdo.html
  block:

    - name: create neutron database
      mysql_db:
        name: neutron
        state: present
        login_unix_socket: /var/lib/mysql/mysql.sock

    - name: create neutron user, grant privileges
      mysql_user:
        name: neutron
        password: "{{ the_password }}"
        priv: 'neutron.*:ALL'
        state: present
        login_unix_socket: /var/lib/mysql/mysql.sock

    - name: create the neutron openstack user
      os_user:
        auth: "{{ keystone_auth }}"
        name: neutron
        password: "{{ the_password }}"
        state: present
        domain: default
      register: create_neutron_user
      environment:
        # https://github.com/ansible/ansible/issues/26092
        OS_IDENTITY_API_VERSION: 3

    - name: add the neutron user to the service project with admin role
      os_user_role:
        auth: "{{ keystone_auth }}"
        user: neutron
        role: admin
        project: service
      register: neutron_to_service_with_admin
      environment:
        # https://github.com/ansible/ansible/issues/26092
        OS_IDENTITY_API_VERSION: 3

    - name: create the neutron service
      os_keystone_service:
        auth: "{{ keystone_auth }}"
        description: "OpenStack Neutron Service"
        name: neutron
        service_type: network
        state: present
      register: create_neutron_service
      environment:
        # https://github.com/ansible/ansible/issues/26092
        OS_IDENTITY_API_VERSION: 3

    - name: create neutron service endpoints
      os_keystone_endpoint:
        auth: "{{ keystone_auth }}"
        endpoint_interface: "{{ item }}"
        region: RegionOne
        service: neutron
        state: present
        url: http://controller0:9696
      with_items:
        - public
        - internal
      environment:
        # https://github.com/ansible/ansible/issues/26092
        OS_IDENTITY_API_VERSION: 3
    # fatal: [controller0]: FAILED! => {"changed": false, "msg": "Multiple matches found for neutron"}
    # I had multiple neutron services created by accident
    # openstack service list | grep -i neutron
    # | 14169d42e18c46c3a31d7c0f90a9e7f3 | neutron   | compute   |
    # | 6eb0c240dfa04954b9bcbda98b20092a | neutron   | network   |
    # openstack service delete 14169d42e18c46c3a31d7c0f90a9e7f3
    # openstack service delete 6eb0c240dfa04954b9bcbda98b20092a

    - name: install packages
      yum:
        name:
          - openstack-neutron
          - openstack-neutron-ml2
          - openstack-neutron-linuxbridge
          - ebtables

    - name: configure neutron
      template:
        dest: /etc/neutron/neutron.conf
        src: neutron.conf.j2

    - name: configure the ML2 plugin
      template:
        dest: /etc/neutron/plugins/ml2/ml2_conf.ini
        src: ml2_conf.ini.j2

    - name: configure the linux bridge agent
      template:
        dest: /etc/neutron/plugins/ml2/linuxbridge_agent.ini
        src: linuxbridge_agent.ini.j2

    #- name: kernel parameters
    #  sysctl:
    #    name: "{{ item }}"
    #    reload: yes
    #    state: present
    #    value: '1'
    #  with_items:
    #    - net.bridge.bridge-nf-call-iptables
    #    - net.bridge.bridge-nf-call-ip6tables

    - name: configure layer-3 agent
      template:
        dest: /etc/neutron/l3_agent.ini
        src: l3_agent.ini.j2

    - name: configure dhcp agent
      template:
        dest: /etc/neutron/dhcp_agent.ini
        src: dhcp_agent.ini.j2

    - name: configure metadata agent
      template:
        dest: /etc/neutron/metadata_agent.ini
        src: metadata_agent.ini.j2

    - name: symlink plugin.ini -> ml2_conf.ini
      file:
        dest: /etc/neutron/plugin.ini
        src: /etc/neutron/plugins/ml2/ml2_conf.ini
        state: link

    - name: populate the database
      shell: /bin/sh -c "neutron-db-manage --config-file /etc/neutron/neutron.conf --config-file /etc/neutron/plugins/ml2/ml2_conf.ini upgrade head" neutron

    - name: restart openstack-nova-api.service
      service:
        name: openstack-nova-api.service
        state: restarted

    - name: start and enable neutron services
      service:
        enabled: yes
        name: "{{ item }}"
        state: started
      with_items:
        - neutron-server.service
        - neutron-linuxbridge-agent.service
        - neutron-dhcp-agent.service
        - neutron-metadata-agent.service
        # For networking option 2, also enable and start the layer-3 service:
        - neutron-l3-agent.service

  when:
    - ( 'controller' in ansible_hostname )
    - ansible_facts['distribution'] == 'CentOS'

- name: networking compute red hat
  # https://docs.openstack.org/neutron/queens/install/install-rdo.html
  block:

    - name: install packages
      yum:
        name:
          - openstack-neutron-linuxbridge
          - ebtables
          - ipset

    - name: configure neutron
      template:
        dest: /etc/neutron/neutron.conf
        src: neutron.conf.j2

    - name: start and enable neutron services
      service:
        enabled: yes
        name: neutron-linuxbridge-agent.service
        state: started

    - name: configure the linux bridge agent
      template:
        dest: /etc/neutron/plugins/ml2/linuxbridge_agent.ini
        src: linuxbridge_agent.ini.j2

    #- name: kernel parameters
    #  sysctl:
    #    name: "{{ item }}"
    #    reload: yes
    #    state: present
    #    value: '1'
    #  with_items:
    #    - net.bridge.bridge-nf-call-iptables
    #    - net.bridge.bridge-nf-call-ip6tables

    - name: restart openstack-nova-compute.service
      service:
        name: openstack-nova-compute.service
        state: restarted

  when:
    - ( 'compute' in ansible_hostname )
    - ansible_facts['distribution'] == 'CentOS'
